from tkinter import *
import random

window = Tk() # declare the window
window.title("HANGMAN") # set window title
window.configure(width = (int(window.winfo_screenwidth())), height = (int(window.winfo_screenheight()))) # set window width and height
window.configure(bg = 'grey') # set window background color

textfile = open("hangman_wordlist.txt", "r")                                # pre-game, setting the variables
all_words = tuple(textfile.readlines())
textfile.close()

difficulty = 1
used = ""
initial_health = 1

def pregame():
    wordlist = []
    global initial_health, health, chosen_word, used_letters, difficulty, used
    if difficulty == 1:                                                         # easy
        initial_health = 11
        for word in all_words:
            if len(word.rstrip("\n")) >= 9:
                wordlist.append(word.rstrip("\n"))
    elif difficulty == 2:                                                       # medium
        initial_health = 8
        for word in all_words:
            if len(word.rstrip("\n")) >= 6 and len(word.rstrip("\n")) <= 9:
                wordlist.append(word.rstrip("\n"))
    elif difficulty == 3:                                                       # hard
        initial_health = 6
        for word in all_words:
            if len(word.rstrip("\n")) == 4 or len(word.rstrip("\n")) == 5:
                wordlist.append(word.rstrip("\n"))            
    health = initial_health
    chosen_word = random.choice(wordlist)
    label_puzzle["text"] = f'{len(chosen_word) * "_ "} [{len(chosen_word)}]'
    label_used["text"] = "Used letters: [ ]"
    label_feedback["text"] = ""
    used_letters = []
    

def changeframe(from_f, to_f):
    from_f.pack_forget()
    to_f.pack()


def change_difficulty():
    global difficulty
    if difficulty == 1:
        difficulty += 1
        button_difficulty['text'] = 'NORMAL'   
    elif difficulty == 2:
        difficulty += 1
        button_difficulty['text'] = 'HARD'
    else:
        difficulty = 1
        button_difficulty['text'] = 'EASY'
	

def winning_moment():
    label_feedback["text"] = "You won!"


def losing_moment():
    label_feedback["text"] = f"You fool! The correct word was: {chosen_word}"


def key_pressed(event):
    global health
    if not event.char.isalpha():
        label_feedback["text"] = "Invalid character"
        return
    if event.char in chosen_word:
        used_letters.append(event.char)
        label_feedback["text"] = "Correct!"
    else:
        used_letters.append(event.char)
        health -= 1
        label_feedback["text"] = "Wrong TT"
    
    puzzle = ""
    for letter in chosen_word:
        if letter in used_letters:
            puzzle += letter
        else:
            puzzle += "_ "
    label_puzzle["text"] = f"{puzzle}  ({len(chosen_word)})"

    used = []
    for letter in used_letters:
        if letter not in used:
            used.append(letter)
    label_used["text"] = "Used letters: [" + ", ".join(sorted(used)) + "]"
    
    if "_" not in puzzle:                                             
        winning_moment()
    if health <= 0:
        losing_moment()


window.bind("<Key>", key_pressed)

#main window
frame_menu = Frame(window, width = (int(window.winfo_screenwidth())), height = (int(window.winfo_screenheight())), bg = '#9AB8BA')
frame_game = Frame(window, width = (int(window.winfo_screenwidth())), height = (int(window.winfo_screenheight())), bg = '#9AB8BA')
frame_settings = Frame(window, width = (int(window.winfo_screenwidth())), height = (int(window.winfo_screenheight())), bg = '#9AB8BA')

#menu
frame_menu.pack(side = TOP)
frame_menu.pack_propagate(False)
frame1 = Frame(frame_menu, bg = '#9AB8BA')
frame1.pack(expand = True)

#game
frame_game.pack_propagate(False)
frame3 = Frame(frame_game, bg = '#9AB8BA')
frame3.pack(expand = True)

#settings
frame_settings.pack_propagate(False)
frame2 = Frame(frame_settings, bg = '#9AB8BA')
frame2.pack(expand = True)


button_play = Button(frame1, text = 'PLAY', width = 25, height = 2, fg = '#FF9377', bg = '#055256', highlightcolor='white', activebackground='#13282B', activeforeground='#9AB8BA', font=('calibri', 20), command = lambda : [changeframe(frame_menu, frame_game), pregame()])
button_play.pack()

button_settings = Button(frame1, text = 'SETTINGS',width = 25, height = 2, bg = '#055256', font=('calibri', 20), command = lambda : changeframe(frame_menu, frame_settings) )
button_settings.pack(pady=15)
button_exit = Button(frame1, text='EXIT', width = 25, height = 2, bg = '#055256',font=('calibri', 20), command=window.destroy)
button_exit.pack()


button_back = Button(frame_game, text = 'BACK',width = 25, height = 2, bg = '#055256',font=('calibri', 20) ,command = lambda : changeframe(frame_game, frame_menu) )
button_back.place(x=5, y = 5)
label_puzzle = Label(frame_game, text = "", bg = '#9AB8BA', font=('calibri', 40))
label_puzzle.place(x = 600, y = 200)
label_used = Label(frame_game, text = "", bg = '#9AB8BA', font = ('calibri', 40))
label_used.place(x = 1300, y = 200)
label_feedback = Label(frame_game, text = "", bg = '#9AB8BA', font = ('calibri', 40))
label_feedback.place(x = 800, y = 100)

label_difficulty = Label(frame2, text= 'CHOOSE YOUR DIFFICULTY', bg= '#9AB8BA', fg='white', font=('calibri', 20))
button_Back = Button(frame2, text = 'BACK',width = 25, height = 2, bg = '#055256',font=('calibri', 20) ,command = lambda : changeframe(frame_settings, frame_menu) )
button_difficulty = Button(frame2, text = 'EASY',width = 25, height = 2, bg = '#055256',font=('calibri', 20) ,command = lambda : change_difficulty())
label_difficulty.pack()
button_difficulty.pack(pady = 15)
button_Back.pack(pady = 15)

window.mainloop()